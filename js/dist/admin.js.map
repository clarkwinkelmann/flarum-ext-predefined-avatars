{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@clarkwinkelmann/predefined-avatars/webpack/bootstrap","webpack://@clarkwinkelmann/predefined-avatars/webpack/runtime/compat get default export","webpack://@clarkwinkelmann/predefined-avatars/webpack/runtime/define property getters","webpack://@clarkwinkelmann/predefined-avatars/webpack/runtime/hasOwnProperty shorthand","webpack://@clarkwinkelmann/predefined-avatars/webpack/runtime/make namespace object","webpack://@clarkwinkelmann/predefined-avatars/external root \"flarum.core.compat['admin/app']\"","webpack://@clarkwinkelmann/predefined-avatars/external root \"flarum.core.compat['common/components/Button']\"","webpack://@clarkwinkelmann/predefined-avatars/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@clarkwinkelmann/predefined-avatars/./src/admin/components/Sortable.ts","webpack://@clarkwinkelmann/predefined-avatars/./src/admin/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","import {ClassComponent, Vnode, VnodeDOM} from 'mithril';\n\ninterface SortableAttrs {\n    containerTag?: string\n    placeholderTag?: string\n    disabled?: boolean\n    direction?: 'vertical' | 'horizontal'\n    onsort: (origin: number, destination: number) => void,\n}\n\n/**\n * A sortable implementation inspired by html5sortable, but designed to work with Mithril\n * The sortable children must be a flat array of vnodes and be keyed\n * Copied from flamarkt/core\n */\nexport default class Sortable implements ClassComponent<SortableAttrs> {\n    sortingIndex: number | null = null;\n    showPlaceholderForIndex: number = 0;\n\n    dragoverenterhandler!: (event: DragEvent) => void;\n    drophandler!: (event: DragEvent) => void;\n\n    oncreate(vnode: VnodeDOM<SortableAttrs>) {\n        // We need to handle both dragover and dragenter to prevent inputs from showing a cursor when hovered\n        // We also need this event to handle mouse movement because stopping propagation seems to stop mousemove event\n        this.dragoverenterhandler = event => {\n            if (this.sortingIndex !== null) {\n                event.preventDefault();\n                event.stopPropagation();\n                // @ts-ignore dataTransfer could be null... but not sure when that could happen\n                event.dataTransfer.dropEffect = 'move';\n\n                let targetIndex = 0;\n\n                // We will show the placeholder above or below the hovered item using the middle height as criteria\n                (vnode.dom.childNodes as any as HTMLElement[]).forEach(element => {\n                    const index = parseInt(element.dataset.index || '');\n\n                    // Ignore elements without an index (those will be the placeholders)\n                    if (isNaN(index)) {\n                        return;\n                    }\n\n                    const position = element.getBoundingClientRect();\n\n                    if (vnode.attrs.direction === 'horizontal') {\n                        // Ignore invisible elements\n                        if (!position.width) {\n                            return;\n                        }\n\n                        const middleX = position.left + (position.width / 2);\n\n                        if (event.pageX > middleX + window.scrollX) {\n                            targetIndex = index + 1;\n                        }\n                    } else {\n                        // Ignore invisible elements\n                        if (!position.height) {\n                            return;\n                        }\n\n                        const middleY = position.top + (position.height / 2);\n\n                        if (event.pageY > middleY + window.scrollY) {\n                            targetIndex = index + 1;\n                        }\n                    }\n                });\n\n                if (targetIndex !== this.showPlaceholderForIndex) {\n                    this.showPlaceholderForIndex = targetIndex;\n                    m.redraw();\n                }\n            }\n        };\n\n        document.addEventListener('dragover', this.dragoverenterhandler);\n        document.addEventListener('dragenter', this.dragoverenterhandler);\n\n        // Prevent dropping our sortable item into anything else\n        // Without this it's possible to drop the value into inputs or worse, cause the browser to navigate to 0.0.0.0\n        this.drophandler = event => {\n            if (this.sortingIndex !== null) {\n                event.preventDefault();\n                event.stopPropagation();\n\n                const origin = this.sortingIndex;\n                // This component works in reference to the original index, so there are always two possible placeholders\n                // in between the moved component. However we want to send the new index without that space\n                const destination = this.showPlaceholderForIndex - (this.showPlaceholderForIndex > this.sortingIndex ? 1 : 0);\n\n                this.sortingIndex = null;\n                m.redraw();\n\n                if (destination !== origin) {\n                    vnode.attrs.onsort(origin, destination);\n                }\n            }\n        };\n\n        document.addEventListener('drop', this.drophandler);\n    }\n\n    onremove() {\n        document.removeEventListener('dragover', this.dragoverenterhandler);\n        document.removeEventListener('dragenter', this.dragoverenterhandler);\n        document.removeEventListener('drop', this.drophandler);\n    }\n\n    view(vnode: Vnode<SortableAttrs>) {\n        const children: Vnode[] = [];\n\n        (vnode.children as Vnode<any>[]).forEach((content, index) => {\n            if (this.sortingIndex !== null && this.showPlaceholderForIndex === index) {\n                children.push(this.placeholder(vnode));\n            }\n\n            if (index === this.sortingIndex) {\n                if (!content.attrs.style) {\n                    content.attrs.style = {};\n                }\n\n                content.attrs.style.display = 'none';\n            }\n\n            content.attrs['data-index'] = index;\n            content.attrs.ondragstart = (event: DragEvent) => {\n                if (!event.target || !event.dataTransfer) {\n                    return;\n                }\n\n                if ((event.target as HTMLElement).classList.contains('js-handle') && !vnode.attrs.disabled) {\n                    const element = Array.from((vnode as any as VnodeDOM).dom.childNodes as any as HTMLElement[]).find(elem => elem.dataset.index === index + '');\n\n                    // This should usually not happen since all referenced indexes should exist\n                    // But this pleases typescript\n                    if (!element) {\n                        return;\n                    }\n\n                    const position = element.getBoundingClientRect();\n\n                    event.dataTransfer.effectAllowed = 'move';\n                    event.dataTransfer.setData('text/plain', index + ''); // Cast to string\n                    event.dataTransfer.setDragImage(element, event.pageX - position.left - window.scrollX, event.pageY - position.top - window.scrollY);\n\n                    this.sortingIndex = index;\n                    this.showPlaceholderForIndex = index;\n                } else {\n                    // @ts-ignore Mithril event redraw\n                    event.redraw = false;\n                }\n            };\n\n            children.push(content);\n        });\n\n        if (this.sortingIndex !== null && this.showPlaceholderForIndex === (vnode.children as Vnode[]).length) {\n            children.push(this.placeholder(vnode));\n        }\n\n        return m(vnode.attrs.containerTag || 'div', children);\n    }\n\n    placeholder(vnode: Vnode<SortableAttrs>): Vnode {\n        return m(vnode.attrs.placeholderTag || 'div', {\n            className: 'SortablePlaceholder',\n            key: 'placeholder',\n        }, vnode.attrs.placeholderTag === 'tr' ? m('td', {\n            colspan: 100,\n        }) : null);\n    }\n}\n","import app from 'flarum/admin/app';\nimport Button from 'flarum/common/components/Button';\nimport icon from 'flarum/common/helpers/icon';\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\nimport Sortable from './components/Sortable';\n\napp.initializers.add('clarkwinkelmann-predefined-avatars', () => {\n    let uploading = false;\n\n    app.extensionData\n        .for('clarkwinkelmann-predefined-avatars')\n        .registerSetting({\n            setting: 'predefinedAvatarsOnly',\n            type: 'switch',\n            label: app.translator.trans('clarkwinkelmann-predefined-avatars.admin.settings.predefinedAvatarsOnly'),\n            help: app.translator.trans('clarkwinkelmann-predefined-avatars.admin.settings.predefinedAvatarsOnlyHelp'),\n        })\n        .registerSetting({\n            setting: 'predefinedAvatarsNoRemove',\n            type: 'switch',\n            label: app.translator.trans('clarkwinkelmann-predefined-avatars.admin.settings.predefinedAvatarsNoRemove'),\n            help: app.translator.trans('clarkwinkelmann-predefined-avatars.admin.settings.predefinedAvatarsNoRemoveHelp'),\n        })\n        .registerSetting({\n            setting: 'predefinedAvatarsDefault',\n            type: 'select',\n            options: {\n                none: app.translator.trans('clarkwinkelmann-predefined-avatars.admin.settings.defaultOptions.none'),\n                first: app.translator.trans('clarkwinkelmann-predefined-avatars.admin.settings.defaultOptions.first'),\n                random: app.translator.trans('clarkwinkelmann-predefined-avatars.admin.settings.defaultOptions.random'),\n            },\n            default: 'none',\n            label: app.translator.trans('clarkwinkelmann-predefined-avatars.admin.settings.predefinedAvatarsDefault'),\n            help: app.translator.trans('clarkwinkelmann-predefined-avatars.admin.settings.predefinedAvatarsDefaultHelp'),\n        })\n        .registerSetting(function (this: ExtensionPage) {\n            const rawAvatars = this.setting('predefinedAvatars')();\n\n            let avatars: string[] = [];\n\n            try {\n                avatars = JSON.parse(rawAvatars);\n            } catch (error) {\n                console.error('Invalid JSON for predefinedAvatars settings');\n                // ignore JSON parsing errors\n            }\n\n            if (!Array.isArray(avatars)) {\n                avatars = [];\n            }\n\n            return m('.Form-group', [\n                m('label', app.translator.trans('clarkwinkelmann-predefined-avatars.admin.settings.predefinedAvatars')),\n                m('.helpText', app.translator.trans('clarkwinkelmann-predefined-avatars.admin.settings.predefinedAvatarsHelp')),\n                m(Sortable, {\n                    containerTag: 'ul.PredefinedAvatars',\n                    placeholderTag: 'li.Avatar.Avatar--predefined.Avatar--placeholder',\n                    direction: 'horizontal',\n                    onsort: (origin: number, destination: number) => {\n                        // Because the \"add\" button is inside of the Sortable component\n                        // it's possible to drop an avatar after the last place, which wouldn't work\n                        if (destination >= avatars.length) {\n                            destination = avatars.length - 1;\n                        }\n\n                        avatars.splice(destination, 0, ...avatars.splice(origin, 1));\n                        this.setting('predefinedAvatars')(JSON.stringify(avatars));\n                    },\n                }, [\n                    ...avatars.map((avatar, index) => m('li', {\n                        key: avatar,\n                    }, [\n                        m('.Avatar.Avatar--predefined.js-handle', {\n                            draggable: true,\n                        }, m('img', {\n                            src: app.forum.attribute('predefinedAvatarsPrefix') + avatar,\n                            alt: avatar,\n                            draggable: false, // The img becomes the target of the dragstart event if it doesn't have this\n                        })),\n                        Button.component({\n                            className: 'Button Button--icon Button--delete',\n                            icon: 'fas fa-times',\n                            onclick: () => {\n                                avatars.splice(index, 1);\n                                this.setting('predefinedAvatars')(JSON.stringify(avatars));\n                            },\n                        }),\n                    ])),\n                    m('li', {\n                        key: 'add',\n                    }, m('a.Avatar.Avatar--predefined.UploadButton', {\n                        href: '#',\n                        onclick: (event: Event) => {\n                            event.preventDefault();\n\n                            const $input = $('<input type=\"file\">');\n\n                            $input\n                                .appendTo('body')\n                                .hide()\n                                .trigger('click')\n                                .on('change', event => {\n                                    const body = new FormData();\n                                    // @ts-ignore we know target.files will exist\n                                    body.append('avatar', event.target.files[0]);\n\n                                    uploading = true;\n                                    m.redraw();\n\n                                    app\n                                        .request<{ path: string }>({\n                                            method: 'POST',\n                                            url: app.forum.attribute('apiUrl') + '/predefined-avatar-upload',\n                                            serialize: (raw: any) => raw,\n                                            body,\n                                        })\n                                        .then(response => {\n                                            avatars.push(response.path);\n                                            this.setting('predefinedAvatars')(JSON.stringify(avatars));\n                                            uploading = false;\n                                            m.redraw();\n                                        }, error => {\n                                            uploading = false;\n                                            m.redraw();\n\n                                            throw error;\n                                        });\n                                });\n                        },\n                        disabled: uploading,\n                    }, icon(uploading ? 'fas fa-spinner fa-pulse' : 'fas fa-plus'))),\n                ]),\n            ]);\n        })\n        .registerPermission({\n            icon: 'fas fa-user-circle',\n            label: app.translator.trans('clarkwinkelmann-predefined-avatars.admin.permissions.setPredefinedAvatar'),\n            permission: 'user.setPredefinedAvatar',\n            allowGuest: true, // We allow \"guest\" so you can give this permission to suspended/non-activated users\n        }, 'reply')\n        .registerPermission({\n            icon: 'fas fa-user-circle',\n            label: app.translator.trans('clarkwinkelmann-predefined-avatars.admin.permissions.setCustomAvatarAlways'),\n            permission: 'user.setCustomAvatarAlways',\n        }, 'moderate');\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","Sortable","sortingIndex","showPlaceholderForIndex","dragoverenterhandler","drophandler","oncreate","vnode","this","event","preventDefault","stopPropagation","dataTransfer","dropEffect","targetIndex","dom","childNodes","forEach","element","index","parseInt","dataset","isNaN","position","getBoundingClientRect","attrs","direction","width","middleX","left","pageX","window","scrollX","height","middleY","top","pageY","scrollY","m","redraw","document","addEventListener","origin","destination","onsort","onremove","removeEventListener","view","children","content","push","placeholder","style","display","ondragstart","target","classList","contains","disabled","Array","from","find","elem","effectAllowed","setData","setDragImage","length","containerTag","placeholderTag","className","colspan","app","uploading","registerSetting","setting","type","label","help","options","none","first","random","default","rawAvatars","avatars","JSON","parse","error","console","isArray","splice","stringify","map","avatar","draggable","src","alt","Button","icon","onclick","href","$","appendTo","hide","trigger","on","body","FormData","append","files","method","url","serialize","raw","then","response","path","registerPermission","permission","allowGuest"],"sourceRoot":""}